import{_ as w}from"./DKBxVYyp.js";import{_ as y,i as m,j as S,a5 as q,c as f,o as l,b as C,l as g,e as v,n as u,K as p,F as b,v as B}from"./Dv5Ch5kX.js";import{O as E,S as M,c as z,d as R,M as W,W as I}from"./5bHSoEtU.js";const L={key:0,id:"container",class:"absolute"},P={__name:"Monjori",setup(U){B(t=>({"81c38e1e":v(c)}));const a=m(null);let s,i,e,r;function h(){const t=document.getElementById("container");s=new E(-1,1,1,-1,0,1),i=new M;const n=new z(2,2);r={time:{value:1}};const o=new R({uniforms:r,vertexShader:document.getElementById("vertexShader").textContent,fragmentShader:document.getElementById("fragmentShader").textContent}),_=new W(n,o);i.add(_),e=new I,e.setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight-250),e.setAnimationLoop(x),t.appendChild(e.domElement),window.addEventListener("resize",d)}function d(){e.setSize(window.innerWidth,window.innerHeight-250)}function x(){r.time.value=performance.now()/1e3,e.render(i,s)}const c=m("0");return S(()=>{try{h(),c.value=`${document.querySelector(".spacer").getBoundingClientRect().bottom}px`}catch(t){a.value=t,console.error("!Monjori")}}),q(()=>{document.removeEventListener("resize",d)}),(t,n)=>{const o=w;return l(),f(b,null,[v(a)?C("",!0):(l(),f("div",L)),g(o,{id:"vertexShader",type:"x-shader/x-vertex"},{default:u(()=>n[0]||(n[0]=[p(" varying vec2 vUv; void main() { vUv = uv; gl_Position = vec4( position, 1.0 ); } ")])),_:1}),g(o,{id:"fragmentShader",type:"x-shader/x-fragment"},{default:u(()=>n[1]||(n[1]=[p(" varying vec2 vUv; uniform float time; void main() { vec2 p = - 1.0 + 2.0 * vUv; float a = time * 40.0; float d, e, f, g = 1.0 / 40.0 ,h ,i ,r ,q; e = 400.0 * ( p.x * 0.5 + 0.5 ); f = 400.0 * ( p.y * 0.5 + 0.5 ); i = 200.0 + sin( e * g + a / 150.0 ) * 20.0; d = 200.0 + cos( f * g / 2.0 ) * 18.0 + cos( e * g ) * 7.0; r = sqrt( pow( abs( i - e ), 2.0 ) + pow( abs( d - f ), 2.0 ) ); q = f / r; e = ( r * cos( q ) ) - a / 2.0; f = ( r * sin( q ) ) - a / 2.0; d = sin( e * g ) * 176.0 + sin( e * g ) * 164.0 + r; h = ( ( f + d ) + a / 2.0 ) * g; i = cos( h + r * p.x / 1.3 ) * ( e + e + a ) + cos( q * g * 6.0 ) * ( r + h / 3.0 ); h = sin( f * g ) * 144.0 - sin( e * g ) * 212.0 * p.x; h = ( h + ( f - e ) * q + sin( r - ( a + h ) / 7.0 ) * 10.0 + i / 4.0 ) * g; i += cos( h * 2.3 * sin( a / 350.0 - q ) ) * 184.0 * sin( q - ( r * 4.3 + a / 12.0 ) * g ) + tan( r * g + h ) * 184.0 * cos( r * g + h ); i = mod( i / 5.6, 256.0 ) / 64.0; if ( i < 0.0 ) i += 4.0; if ( i >= 2.0 ) i = 4.0 - i; d = r / 350.0; d += sin( d * d * 8.0 ) * 0.52; f = ( sin( a * g ) + 1.0 ) / 2.0; gl_FragColor = vec4( vec3( f * i / 1.6, i / 2.0 + d / 13.0, i ) * d * p.x + vec3( i / 1.3 + d / 8.0, i / 2.0 + d / 18.0, i ) * d * ( 1.0 - p.x ), 1.0 ); } ")])),_:1})],64)}}},F=y(P,[["__scopeId","data-v-7ee146d8"]]);export{F as default};
