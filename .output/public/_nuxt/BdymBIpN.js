import{_ as C}from"./B1RAyIcd.js";import{_ as S,i as m,j as q,a5 as E,c as g,o as f,b as L,l as v,e as u,n as p,K as w,F as M,v as j}from"./8T3k5aBU.js";import{O as B,S as z,c as W,d as R,M as F,W as G}from"./5bHSoEtU.js";const I={key:0,id:"monjori",class:"absolute"},P={__name:"Monjori",setup(U){j(t=>({e6041cf8:u(c)}));const s=m(null);let d,i,e,a;const c=m("0");function x(t){return t.getContext()}function l(){const t=document.getElementById("monjori");d=new B(-1,1,1,-1,0,1),i=new z;const n=new W(2,2);a={time:{value:1}};const r=new R({uniforms:a,vertexShader:document.getElementById("vertexShader").textContent,fragmentShader:document.getElementById("fragmentShader").textContent}),_=new F(n,r);i.add(_),e=new G,e.setPixelRatio(window.devicePixelRatio),e.setSize(window.innerWidth,window.innerHeight/2),e.setAnimationLoop(h),t.appendChild(e.domElement),e.getContext("webgl").canvas.addEventListener("webglcontextlost",function(y){try{window.removeEventListener("resize",o)}catch{console.log("Monjori: webgl context lost forever!")}}),e.getContext("webgl").canvas.addEventListener("webglcontextrestored",function(y){try{l(),console.log("WebGL context restored!")}catch{console.log("Monjori: Failed to restore webgl context.")}}),window.addEventListener("resize",o)}function o(){window.scroll({top:0,behavior:"instant"}),c.value=`${document.querySelector("#footer-spacer").getBoundingClientRect().top}px`,e.setSize(window.innerWidth,window.innerHeight/2)}function h(){a.time.value=performance.now()/1e3,x(e).clearColor(0,0,0,0),e.render(i,d)}return q(()=>{try{l(),o()}catch(t){s.value=t,console.error("!Monjori")}}),E(()=>{document.removeEventListener("resize",o)}),(t,n)=>{const r=C;return f(),g(M,null,[u(s)?L("",!0):(f(),g("div",I)),v(r,{id:"vertexShader",type:"x-shader/x-vertex"},{default:p(()=>n[0]||(n[0]=[w(" varying vec2 vUv; void main() { vUv = uv; gl_Position = vec4( position, 1.0 ); } ")])),_:1}),v(r,{id:"fragmentShader",type:"x-shader/x-fragment"},{default:p(()=>n[1]||(n[1]=[w(" varying vec2 vUv; uniform float time; void main() { vec2 p = - 1.0 + 2.0 * vUv; float a = time * 40.0; float d, e, f, g = 1.0 / 40.0 ,h ,i ,r ,q; e = 400.0 * ( p.x * 0.5 + 0.5 ); f = 400.0 * ( p.y * 0.5 + 0.5 ); i = 200.0 + sin( e * g + a / 150.0 ) * 20.0; d = 200.0 + cos( f * g / 2.0 ) * 18.0 + cos( e * g ) * 7.0; r = sqrt( pow( abs( i - e ), 2.0 ) + pow( abs( d - f ), 2.0 ) ); q = f / r; e = ( r * cos( q ) ) - a / 2.0; f = ( r * sin( q ) ) - a / 2.0; d = sin( e * g ) * 176.0 + sin( e * g ) * 164.0 + r; h = ( ( f + d ) + a / 2.0 ) * g; i = cos( h + r * p.x / 1.3 ) * ( e + e + a ) + cos( q * g * 6.0 ) * ( r + h / 3.0 ); h = sin( f * g ) * 144.0 - sin( e * g ) * 212.0 * p.x; h = ( h + ( f - e ) * q + sin( r - ( a + h ) / 7.0 ) * 10.0 + i / 4.0 ) * g; i += cos( h * 2.3 * sin( a / 350.0 - q ) ) * 184.0 * sin( q - ( r * 4.3 + a / 12.0 ) * g ) + tan( r * g + h ) * 184.0 * cos( r * g + h ); i = mod( i / 5.6, 256.0 ) / 64.0; if ( i < 0.0 ) i += 4.0; if ( i >= 2.0 ) i = 4.0 - i; d = r / 350.0; d += sin( d * d * 8.0 ) * 0.52; f = ( sin( a * g ) + 1.0 ) / 2.0; gl_FragColor = vec4( vec3( f * i / 1.6, i / 2.0 + d / 13.0, i ) * d * p.x + vec3( i / 1.3 + d / 8.0, i / 2.0 + d / 18.0, i ) * d * ( 1.0 - p.x ), 1.0 ); } ")])),_:1})],64)}}},H=S(P,[["__scopeId","data-v-4d0f02fa"]]);export{H as default};
